services:
  # Service Web (PHP + Apache)
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iutstyleshop_web
    ports:
      - "${WEB_PORT:-8080}:80"
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - MAIL_EMAIL=${MAIL_EMAIL}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - iutstyleshop_network
    restart: unless-stopped

  # Service Base de données (MariaDB)
  db:
    image: mariadb:11.2
    container_name: iutstyleshop_db
    ports:
      - "${DB_EXTERNAL_PORT:-3307}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./docker/02-tables.sql:/docker-entrypoint-initdb.d/02-tables.sql
      - ./docker/03-procedures.sql:/docker-entrypoint-initdb.d/03-procedures.sql
      - ./docker/04-triggers.sql:/docker-entrypoint-initdb.d/04-triggers.sql
      - ./docker/05-data.sql:/docker-entrypoint-initdb.d/05-data.sql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iutstyleshop_network
    restart: unless-stopped

  # Service phpMyAdmin (optionnel, pour gérer la base de données)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: iutstyleshop_phpmyadmin
    ports:
      - "${PMA_PORT:-8081}:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 50M
    depends_on:
      - db
    networks:
      - iutstyleshop_network
    restart: unless-stopped

networks:
  iutstyleshop_network:
    driver: bridge

volumes:
  db_data:
    driver: local
